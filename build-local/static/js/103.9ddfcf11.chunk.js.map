{"version":3,"sources":["views/components/PsmtSignup/Company.js","views/components/PsmtSignup/Individual.js","views/pages/PsmtAuth/SignUp.js","views/components/Loader/LoaderSpinner.js","views/components/Button/Button.js","views/components/InputText/InputText.js","views/components/SectionTitle/SectionTitle.js","redux/actions/AdminClientActions.js"],"names":["Company","props","console","log","useState","Password","SetPassword","ConfirmPassword","SetConfirmPassword","first_name","middle_name","last_name","setSignUpField","history","useHistory","onChange","e","target","name","checked","value","preValue","className","InputText","type","placeholder","label","hasLabel","isPassword","onClick","ChangeClass","FormGroupClass","to","Button","push","btnName","Individual","dispatch","useDispatch","clientResponse","useSelector","state","phone_number_ind","id_number","email_id","certif_id_img","password","cnf_password","setState","stateHandler","key","files","preventDefault","formData","FormData","append","ClientRegisterAction","PsmtSignUP","userType","setUserType","UserTypeFunction","tokenValue","useParams","id","window","location","href","split","Row","Col","lg","src","alt","SectionTitle","title","subHeading","Form","defaultChecked","propsData","LoaderSpinner","React","isDisabled","isLoading","disabled","LinkButton","text","focused","setFocused","labelText","defaultValue","onFocus","CPassword","onBlur","hidden","isHidden","required","autoComplete","min","max","maxLength","pattern","toString","readOnly","error","viewBox","width","height","fill","d","SelectBox","optionData","TextArea","rows","defaultData","FileUpload","accept","fileName","RadioSelectGroup","FormLabelClass","priceText","monthText","toast","configure","GetClientListAction","Data","AUTH_LOADING","axios","post","baseUrl","headers","apiHeader","then","response","CLIENT_LIST_SUCCESS","payload","data","catch","errors","CLIENT_LIST_ERROR","ClientUpdateAction","status","CLIENT_UPDATE_SUCCESS","CLIENT_UPDATE_ERROR","entries","pair","CLIENT_REGISTER_SUCCESS","success","message","theme","CLIENT_REGISTER_ERROR","errorMessage","ClientEditAction","values","CLIENT_EDIT_SUCCESS","CLIENT_EDIT_ERROR","ClientSendEmailRegisterAction","CLIENT_REGISTER_EMAIL_SUCCESS","CLIENT_REGISTER_EMAIL_ERROR"],"mappings":"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","file":"static/js/103.9ddfcf11.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '../Button/Button';\r\nimport { InputText } from '../InputText/InputText';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction \r\nCompany(props) {\r\n    console.log(\"props data is\",props)\r\n    const [Password, SetPassword] = useState(false);\r\n\tconst [ConfirmPassword, SetConfirmPassword] = useState(false);\r\n\tconst [signUpField, setSignUpField] = useState({\r\n\t\tfirst_name: \"\",\r\n\t\tmiddle_name: \"\",\r\n\t\tlast_name: \"\"\r\n\t});\r\n    const history = useHistory()\r\n\tconst ShowPassword = () => SetPassword(!Password);\r\n\tconst ConfirmShowPassword = () => SetConfirmPassword(!ConfirmPassword);\r\n    \r\n\tconst onChange = (e) => {\r\n\t\tconst {name, checked ,value} = e.target;\r\n\t\tif(name == \"t_c\"){\r\n\t\t\tsetSignUpField((preValue) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...preValue,\r\n\t\t\t\t\t[name]: checked\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetSignUpField((preValue) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...preValue,\r\n\t\t\t\t\t[name]: value\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst SignUPSubmit = (e) => {\r\n\t\thistory.push(`/psmt/company-information$`);\r\n\t}\r\n    return (\r\n        <>\r\n            <div className=\"row low-space-row\">\r\n                <div className='col-lg-4'>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        name=\"fName\"\r\n                        placeholder=\"First Name\"\r\n                        label=\"\"\r\n                        hasLabel={true}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className='col-lg-4'>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        name=\"mName\"\r\n                        placeholder=\"Middle Name\"\r\n                        label=\"\"\r\n                        hasLabel={true}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className='col-lg-4'>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        name=\"lName\"\r\n                        placeholder=\"Last Name\"\r\n                        label=\"\"\r\n                        hasLabel={true}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className='col-lg-6'>\r\n                    <InputText\r\n                        type=\"number\"\r\n                        name=\"IdNumber\"\r\n                        placeholder=\"ID Number\"\r\n                        label=\"\"\r\n                        hasLabel={true}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className='col-lg-6'>\r\n                    <InputText\r\n                        type=\"number\"\r\n                        name=\"pNumber\"\r\n                        placeholder=\"Phone Number\"\r\n                        label=\"\"\r\n                        hasLabel={true}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className='col-lg-6'>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        name=\"designation\"\r\n                        placeholder=\"Designation\"\r\n                        label=\"\"\r\n                        hasLabel={true}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className='col-lg-6'>\r\n                    <InputText\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Company Email Address\"\r\n                        label=\"\"\r\n                        hasLabel={true}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className='col-lg-6'>\r\n                    <InputText\r\n                        type={Password ? \"text\" : \"password\"}\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        isPassword=\"true\"\r\n                        onClick={ShowPassword}\r\n                        ChangeClass={Password ? \"show-hide active\" : \"show-hide\"}\r\n                        FormGroupClass=\"mb-2\"\r\n                    />\r\n                </div>\r\n                <div className='col-lg-6'>\r\n                    <InputText\r\n                        type={ConfirmPassword ? \"text\" : \"password\"}\r\n                        name=\"cPassword\"\r\n                        placeholder=\"Confirm Password\"\r\n                        isPassword=\"true\"\r\n                        onClick={ConfirmShowPassword}\r\n                        ChangeClass={ConfirmPassword ? \"show-hide active\" : \"show-hide\"}\r\n                        FormGroupClass=\"mb-2\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='pass-instruction'>8+ characters 1 Uppercase character <br /> 1 Special Character 1 Number</div>\r\n\r\n            <div className=\"remember-forgot-password\">\r\n                <label className=\"radio-check-btn checkbox-btn\">\r\n                    <input type=\"checkbox\" name=\"t_c\" />\r\n                    <span>\r\n                        <i></i>\r\n                        I have read and agree with the <Link to=\"/\" className=\"text-btn\">Terms and Conditions of\r\n                            use</Link>, <Link to=\"/\" className=\"text-btn\">Confidentiality & Privacy Policy</Link>.\r\n                    </span>\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-submit\">\r\n                <Button onClick={SignUPSubmit} className=\"btn-secondary\" btnName=\"Get Started\" />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Company","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '../Button/Button';\r\nimport { InputText } from '../InputText/InputText';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {ClientRegisterAction} from '../../../redux/actions/AdminClientActions'\r\n\r\nfunction Individual(props) {\r\n    console.log(\"individual called \")\r\n    const [Password, SetPassword] = useState(false);\r\n    const [ConfirmPassword, SetConfirmPassword] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const clientResponse = useSelector(state => state)\r\n    console.log(\"Selector data is \",clientResponse)\r\n    const [state, setState] = useState({\r\n        first_name: \"\",\r\n        middle_name: \"\",\r\n        last_name: \"\",\r\n        phone_number_ind :\"\",\r\n        id_number : \"\",\r\n        email_id : \"\",\r\n        certif_id_img : \"\",\r\n        password : \"\",\r\n        cnf_password : \"\",\r\n    });\r\n    console.log(\"state is\",state)\r\n\r\n    const ShowPassword = () => {\r\n        SetPassword(!Password);\r\n    };\r\n\r\n    const ConfirmShowPassword = () => {\r\n        SetConfirmPassword(!ConfirmPassword);\r\n    };\r\n    const stateHandler = (key, value) => {\r\n        state[key] = value;\r\n        setState({ ...state });\r\n      };\r\n  \r\n    const SignUPSubmit = (e) => {\r\n        console.log(\"e is \", e)\r\n        e.preventDefault()\r\n        let formData = new FormData()\r\n        formData.append(\"first_name\",state.first_name);\r\n        formData.append(\"middle_name\",state.middle_name);\r\n        formData.append(\"last_name\",state.last_name);\r\n        formData.append(\"phone_no\", state.phone_number_ind);\r\n        formData.append(\"id_number\", state.id_number);\r\n        formData.append(\"email_id\", state.email_id);\r\n        formData.append(\"type\", 2);\r\n        formData.append(\"regType\", \"2\");\r\n        formData.append(\"role_id\", \"4\");\r\n        formData.append(\"parent_id\", \"5\");\r\n        formData.append(\"comp_incop_certif_url\", state.certif_id_img);\r\n\r\n        dispatch(ClientRegisterAction(formData))\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"row low-space-row\">\r\n                <div className='col-lg-4'>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        name=\"fName\"\r\n                        placeholder=\"First Name\"\r\n                        label=\"\"\r\n                        hasLabel={true}\r\n                        onChange={({ target }) =>\r\n                        stateHandler(\"first_name\", target.value)\r\n                      }\r\n                        value = {state.first_name}\r\n                    />\r\n                </div>\r\n                <div className='col-lg-4'>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        name=\"mName\"\r\n                        placeholder=\"Middle Name\"\r\n                        label=\"\"\r\n                        hasLabel={true}\r\n                        onChange={({ target }) =>\r\n                        stateHandler(\"middle_name\", target.value)\r\n                      }\r\n                        value = {state.middle_name}\r\n\r\n                    />\r\n                </div>\r\n                <div className='col-lg-4'>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        name=\"lName\"\r\n                        placeholder=\"Last Name\"\r\n                        label=\"\"\r\n                        hasLabel={true}\r\n                        onChange={({ target }) =>\r\n                        stateHandler(\"last_name\", target.value)\r\n                      }\r\n                        value = {state.last_name}\r\n\r\n                    />\r\n                </div>\r\n                <div className='col-lg-4'>\r\n                    <InputText\r\n                        type=\"number\"\r\n                        name=\"id_number\"\r\n                        placeholder=\"ID Number\"\r\n                        label=\"\"\r\n                        hasLabel={true}\r\n                        onChange={({ target }) =>\r\n                        stateHandler(\"id_number\", target.value)\r\n                      }\r\n                        value = {state.id_number}\r\n\r\n                    />\r\n                </div>\r\n                <div className='col-lg-4'>\r\n                    <InputText\r\n                        type=\"text\"\r\n                        name=\"phone_number_ind\"\r\n                        placeholder=\"Phone Number\"\r\n                        label=\"\"\r\n                        hasLabel={true}\r\n                        value ={state.phone_number_ind}\r\n                        onChange={({ target }) =>\r\n                        stateHandler(\"phone_number_ind\", target.value)\r\n                      }\r\n                    />\r\n                </div>\r\n                <div className='col-lg-4'>\r\n                    <InputText\r\n                        type=\"email\"\r\n                        name=\"email_id\"\r\n                        placeholder=\"Email Address\"\r\n                        label=\"\"\r\n                        hasLabel={true}\r\n                        onChange={({ target }) =>\r\n                        stateHandler(\"email_id\", target.value)\r\n                      }\r\n                        value = {state.email_id}\r\n                    />\r\n                </div>\r\n                <div className='col-lg-12'>\r\n                    <div className='file-upload-bx'>\r\n                        <h6>Upload ID</h6>\r\n                        <div className=\"file-upload\">\r\n                            <input type=\"file\" className=\"custom-file-input\" name = \"certif_id_img\"    onChange={({ target }) =>\r\n                        stateHandler(\"certif_id_img\", target.files[0])\r\n                        } />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='col-lg-6'>\r\n                    <InputText\r\n                        type={Password ? \"text\" : \"password\"}\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        isPassword=\"true\"\r\n                        onClick={ShowPassword}\r\n                        ChangeClass={Password ? \"show-hide active\" : \"show-hide\"}\r\n                        FormGroupClass=\"mb-2\"\r\n                        onChange={({ target }) =>\r\n                        stateHandler(\"password\", target.value)\r\n                        } \r\n                        value = {state.password}\r\n                    />\r\n                </div>\r\n                <div className='col-lg-6'>\r\n                    <InputText\r\n                        type={ConfirmPassword ? \"text\" : \"password\"}\r\n                        name=\"cnf_password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        isPassword=\"true\"\r\n                        onClick={ConfirmShowPassword}\r\n                        ChangeClass={ConfirmPassword ? \"show-hide active\" : \"show-hide\"}\r\n                        onChange={({ target }) =>\r\n                        stateHandler(\"cnf_password\", target.value)\r\n                        } \r\n                        value = {state.cnf_password}\r\n                        FormGroupClass=\"mb-2\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='pass-instruction'>8+ characters 1 Uppercase character <br /> 1 Special Character 1 Number</div>\r\n\r\n            <div className=\"remember-forgot-password\">\r\n                <label className=\"radio-check-btn checkbox-btn\">\r\n                    <input type=\"checkbox\" name=\"t_c\" />\r\n                    <span>\r\n                        <i></i>\r\n                        I have read and agree with the <Link to=\"/\" className=\"text-btn\">Terms and Conditions of\r\n                            use</Link>, <Link to=\"/\" className=\"text-btn\">Confidentiality & Privacy Policy</Link>.\r\n                    </span>\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-submit\">\r\n                <Button onClick={SignUPSubmit} className=\"btn-secondary\" btnName=\"Get Started\" />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Individual","import React, { useState } from 'react';\r\nimport { Row, Col, Form } from \"react-bootstrap\"\r\nimport { Link,useParams } from 'react-router-dom';\r\nimport Company from '../../components/PsmtSignup/Company';\r\nimport Individual from '../../components/PsmtSignup/Individual';\r\nimport { SectionTitle } from '../../components/SectionTitle/SectionTitle';\r\nimport \"../auth/Auth.scss\"\r\n\r\nfunction PsmtSignUP() {\r\n\tconst [userType , setUserType] = useState(true);\r\n\r\n\tconst UserTypeFunction = () => setUserType(!userType)\r\n\tlet { id } = useParams();\r\n\tlet tokenValue =  window.location.href.split(\"=\")[1]\r\n\t\tconsole.log('token is',tokenValue )\r\n\treturn (\r\n\t\t<div className=\"auth-section signup-auth-section\">\r\n\t\t\t<div className='container-fluid'>\r\n\t\t\t\t<Row className='align-items-center'>\r\n\t\t\t\t\t<Col lg=\"6\" className=''>\r\n\t\t\t\t\t\t<div className='auth-para'>\r\n\t\t\t\t\t\t\t<p>Automate your processes with our cutting-edge technology to\r\n\t\t\t\t\t\t\t\tbetter inform your customers’ onboarding decisions by providing\r\n\t\t\t\t\t\t\t\ttimely reports consequently preventing fraud</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"auth-image\">\r\n\t\t\t\t\t\t\t<img src=\"/images/sign-up-vector.svg\" alt=\"Login\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg=\"6\" className=''>\r\n\t\t\t\t\t\t<div className=\"auth-wrapper w-100\">\r\n\t\t\t\t\t\t\t<div className=\"auth-head\">\r\n\t\t\t\t\t\t\t\t<SectionTitle title=\"Sign Up\" subHeading={\"Enter your details to create an account\"} className={'text-left'} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t<div className=\"auth-form\">\r\n\t\t\t\t\t\t\t\t\t<div className=''>\r\n\t\t\t\t\t\t\t\t\t\t<h6>Creating the account as?</h6>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"inline-col radio-check-btn user-type\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"radiobx-btn\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"userType\" onChange={UserTypeFunction} defaultChecked />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCompany\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"radiobx-btn\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"userType\" onChange={UserTypeFunction} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tIndividual\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t{userType \r\n\t\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\t\t\t<Company propsData = {tokenValue}/>\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<Individual  propsData = {tokenValue}/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"bottom-info\">\r\n\t\t\t\t\t\t\t<p> Already have an account? <Link to=\"/login\" className=\"secondary-text\"> Sign In </Link></p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\n\r\nexport default PsmtSignUP;\r\n","import React from 'react';\r\nimport \"./Loader.scss\"\r\n\r\nconst LoaderSpinner = () => {\r\n     const [loader, setLoader] = React.useState(false)\r\n    return (\r\n        <>\r\n        &nbsp;<span className=\"spinner-border d-inline-block\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoaderSpinner\r\n// export const showLoader = (status) => {\r\n//     setLoader(status)\r\n// }\r\n\r\n// export const hideLoader = (status) => {\r\n//     setLoader(status)\r\n// }\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoaderSpinner from '../Loader/LoaderSpinner'\r\nimport './Button.scss';\r\n\r\nexport const Button = ({className, btnName, onClick, id, type, isDisabled, isLoading}) => {\r\n    return (\r\n        <button\r\n            className={`btn ${className}`}\r\n            onClick={onClick}\r\n            id={id}\r\n            type={type}\r\n            disabled={isDisabled}\r\n        >\r\n            {btnName}\r\n            {isLoading && <LoaderSpinner />}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport const LinkButton = ({className, text, id, to}) => {\r\n    return (\r\n        <Link\r\n            to={to}\r\n            className={`btn ${className}`}\r\n            id={id}\r\n        >\r\n            {text}\r\n        </Link>\r\n    );\r\n}","import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport './InputStyle.scss';\r\nexport const InputText = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {/* {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    } */}\r\n                </label>\r\n            }\r\n            <div className={props.isPassword && \"hasIcon\"}>\r\n                <input\r\n                    type={props.type}\r\n                    name={props.name}\r\n                    value={props.value}\r\n                    defaultValue={props.defaultValue}\r\n                    className={`form-control ${props.className}`}\r\n                    placeholder={props.placeholder}\r\n                    id={props.id}\r\n                    onChange={props.onChange}\r\n                    onFocus={() => props.CPassword == true && setFocused(true)}\r\n                    onBlur={handleChange}\r\n                    hidden={props.isHidden}\r\n                    disabled={props.isDisabled}\r\n                    required={props.required}\r\n                    autoComplete=\"off\"\r\n                    min={props.min}\r\n                    max={props.max}\r\n                    maxLength={props.maxLength}\r\n                    pattern={props.pattern}\r\n                    focused={focused.toString()}\r\n                    readOnly={props.readOnly}\r\n                />\r\n                {\r\n                    props.isPassword &&\r\n                    <span\r\n                        className={props.ChangeClass}\r\n                        onClick={props.onClick}\r\n                    >\r\n                    </span>\r\n                }\r\n                {props.error &&\r\n                    <div className=\"error-text\">\r\n                        <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                        <span> {props.error} </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport const SelectBox = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {/* {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    } */}\r\n                </label>\r\n            }\r\n            <select\r\n                name={props.name}\r\n                className={`form-control ${props.className}`}\r\n                id={props.id}\r\n                placeholder={props.placeholder}\r\n                onChange={props.onChange}\r\n                onBlur={handleChange}\r\n                required={props.required}\r\n                focused={focused.toString()}\r\n                disabled={props.disabled}\r\n            >\r\n                {\r\n                     props.optionData\r\n                }\r\n            </select>\r\n            {props.error &&\r\n                <div className=\"error-text\">\r\n                    <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                    <span> {props.error} </span>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport const TextArea = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {/* {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    } */}\r\n                </label>\r\n            }\r\n            <textarea\r\n                name={props.name}\r\n                id={props.id}\r\n                className={`form-control ${props.className}`}\r\n                placeholder={props.placeholder}\r\n                onBlur={handleChange}\r\n                required={props.required}\r\n                focused={focused.toString()}\r\n                pattern={props.pattern}\r\n                rows=\"5\"\r\n            >{props.defaultData}</textarea>\r\n            {props.error &&\r\n                <div className=\"error-text\">\r\n                    <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                    <span> {props.error} </span>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const FileUpload = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText && <label> {props.labelText} </label>}\r\n\r\n            <label className='fileUploader'>\r\n                <input\r\n                    type=\"file\"\r\n                    onChange={props.onChange}\r\n                    required={props.required}\r\n                    focused={focused.toString()}\r\n                    onBlur={handleChange}\r\n                    accept={props.accept}\r\n                    name={props.name}\r\n                />\r\n                <div className='fileUploader-inner'>\r\n                    <span className='browse'>Browse <img src=\"/images/file-upload.svg\" alt=\"icon\" /></span>\r\n                    <span className='fileName'>{props.fileName ? props.fileName : \"Not file selected yet!\"}</span>\r\n                </div>\r\n                {props.error &&\r\n                    <div className=\"error-text\">\r\n                        <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                        <span> {props.error} </span>\r\n                    </div>\r\n                }\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const RadioSelect = (props) => {\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    }\r\n                </label>\r\n            }\r\n            <input\r\n                type=\"radio\"\r\n                id={props.id}\r\n                name={props.name}\r\n                className={`radio-btn ${props.className}`}\r\n                value=\"\"\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const RadioSelectGroup = (props) => {\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label className={`radiobx-btn ${props.FormLabelClass}`}>\r\n                    <input\r\n                        type=\"radio\"\r\n                        id={props.id}\r\n                        name={props.name}\r\n                        className={`radio-btn ${props.className}`}\r\n                        value=\"\"\r\n                        defaultChecked={props.defaultChecked}\r\n                    />\r\n                    <span>\r\n                        <i></i>\r\n                        <div className={'plan-content'}>\r\n                            <div>\r\n                                <b>{props.labelText}</b>\r\n                                <font>{props.priceText}</font>\r\n                            </div>\r\n                            <p>{props.monthText}</p>\r\n                        </div>\r\n                    </span>\r\n                </label>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './SectionTitle.scss';\r\n\r\n\r\nexport const SectionTitle = ({ className, title, subHeading, id }) => {\r\n    return (\r\n        <div className={`section-title ${className}`} id={id}>\r\n            <h2>{title}</h2>\r\n            {subHeading &&\r\n                <p>{subHeading}</p>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\nimport { AUTH_LOADING,CLIENT_EDIT_SUCCESS,CLIENT_EDIT_ERROR, CLIENT_REGISTER_EMAIL_SUCCESS,CLIENT_REGISTER_EMAIL_ERROR,CLIENT_LIST_SUCCESS, CLIENT_LIST_ERROR, CLIENT_REQUEST_LIST_ERROR, CLIENT_UPDATE_SUCCESS, CLIENT_UPDATE_ERROR, CLIENT_REGISTER_SUCCESS, CLIENT_REGISTER_ERROR, CLIENT_REQUEST_LIST_SUCCESS,CLIENT_VERIFY_REQUEST_SUCCESS,CLIENT_VERIFY_REQUEST_ERROR } from './types';\r\nimport baseUrl from '../constant/index';\r\nimport { apiHeader } from './apiHeader';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// import {showLoader, hideLoader} from '../../views/components/Loader'\r\ntoast.configure();\r\n\r\nexport const GetClientRequestListAction = (Data) => async (dispatch) => {\r\n    dispatch({ type: AUTH_LOADING })\r\n    await axios\r\n        .post(`${baseUrl()}/admin/temp_customer_list`, {\r\n            headers: apiHeader(true)\r\n        })\r\n        .then(response => {\r\n            dispatch({\r\n                type: CLIENT_REQUEST_LIST_SUCCESS,\r\n                payload: response.data\r\n            })\r\n            console.log(\"response is \", response);\r\n        })\r\n        .catch(errors => {\r\n            dispatch({\r\n                type: CLIENT_REQUEST_LIST_ERROR,\r\n                payload: errors\r\n            })\r\n            console.log(\"COUNTRYLIST error\", errors);\r\n        })\r\n}\r\n\r\nexport const GetClientListAction = (Data) => async (dispatch) => {\r\n    dispatch({ type: AUTH_LOADING })\r\n    await axios\r\n        .post(`${baseUrl()}/admin/customer_client_list_pidwa`, {\r\n            headers: apiHeader(true)\r\n        })\r\n        .then(response => {\r\n            dispatch({\r\n                type: CLIENT_LIST_SUCCESS,\r\n                payload: response.data\r\n            })\r\n            console.log(\"response  client list is \", response);\r\n        })\r\n        .catch(errors => {\r\n            dispatch({\r\n                type: CLIENT_LIST_ERROR,\r\n                payload: errors\r\n            })\r\n            console.log(\"COUNTRYLIST error\", errors);\r\n        })\r\n}\r\n\r\nexport const ClientUpdateAction = (id, status) => async (dispatch) => {\r\n    dispatch({ type: AUTH_LOADING })\r\n    await axios\r\n        .post(`${baseUrl()}/admin/client_update_status`, { id, status }, {\r\n            headers: apiHeader(true)\r\n        })\r\n        .then(response => {\r\n            dispatch({\r\n                type: CLIENT_UPDATE_SUCCESS,\r\n                payload: response.data\r\n            })\r\n            console.log(\"response  client update is \", response);\r\n        })\r\n        .catch(errors => {\r\n            dispatch({\r\n                type: CLIENT_UPDATE_ERROR,\r\n                payload: errors\r\n            })\r\n            console.log(\"COUNTRYLIST error\", errors);\r\n        })\r\n}\r\n\r\nexport const ClientRegisterAction = (formData) => async (dispatch) => {\r\n    console.log(\"Called\")\r\n    for (var pair of formData.entries()) {\r\n        console.log(pair[0]+ ', ' + pair[1]); \r\n    }  \r\n    dispatch({ type: AUTH_LOADING })\r\n    axios\r\n        .post(`${baseUrl()}/admin/client_register`, formData, {\r\n            headers: apiHeader(true)\r\n        })\r\n        .then(response => {\r\n            console.log(\"response is client register\", response)\r\n            dispatch({\r\n                type: CLIENT_REGISTER_SUCCESS,\r\n                payload: response.data\r\n            })\r\n             toast.success(response.data.message, { theme: \"colored\" })\r\n          \r\n        })\r\n        .catch(errors => {\r\n            console.log(\"error is \", errors)\r\n            dispatch({\r\n                type: CLIENT_REGISTER_ERROR,\r\n                payload: errors\r\n            })\r\n            toast.error(errors.error.errorMessage.id.message, { theme: \"colored\" })\r\n            console.log(\"error is \",errors.error)\r\n        })\r\n}\r\n\r\nexport const ClientEditAction = (formData) => async (dispatch) => {\r\n    for (const value of formData.values()) {\r\n        console.log(\"datavalll\",value);\r\n      }    \r\n    dispatch({ type: AUTH_LOADING })\r\n    axios\r\n        .post(`${baseUrl()}/admin/client_edit`, formData, {\r\n            headers: apiHeader(true)\r\n        })\r\n        .then(response => {\r\n            dispatch({\r\n                type: CLIENT_EDIT_SUCCESS,\r\n                payload: response.data\r\n            })\r\n             toast.success(response.data.message, { theme: \"colored\" })\r\n            console.log(\"response is\", response)\r\n        })\r\n        .catch(errors => {\r\n            console.log(\"error is \", errors)\r\n            dispatch({\r\n                type: CLIENT_EDIT_ERROR,\r\n                payload: errors\r\n            })\r\n            toast.error(errors.response.data.message, { theme: \"colored\" })\r\n            console.log(\"error is \",errors.response.data)\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\nexport const ClientSendEmailRegisterAction = (data) => async (dispatch) => {\r\n     console.log(\"data is \", data )\r\n    dispatch({ type: AUTH_LOADING })\r\n    axios\r\n        .post(`${baseUrl()}/admin/single_email_link`, data, {\r\n            headers: apiHeader(true)\r\n        })\r\n        .then(response => {\r\n            dispatch({\r\n                type: CLIENT_REGISTER_EMAIL_SUCCESS,\r\n                payload: response.data\r\n            })\r\n             toast.success(response.data.message, { theme: \"colored\" })\r\n            console.log(\"response is send email\", response)\r\n        })\r\n        .catch(errors => {\r\n            console.log(\"error is \", errors)\r\n            dispatch({\r\n                type: CLIENT_REGISTER_EMAIL_ERROR,\r\n                payload: errors\r\n            })\r\n            toast.error(errors.response.data.message, { theme: \"colored\" })\r\n        })\r\n}\r\n\r\nexport const AcceptRejectRequestPsmtAction = (data) => async (dispatch) => {\r\n    console.log(\"data is \", data )\r\n   dispatch({ type: AUTH_LOADING })\r\n   axios\r\n       .post(`${baseUrl()}/admin/psmt_action_verify`, data, {\r\n           headers: apiHeader(true)\r\n       })\r\n       .then(response => {\r\n           dispatch({\r\n               type: CLIENT_VERIFY_REQUEST_SUCCESS,\r\n               payload: response.data\r\n           })\r\n            toast.success(response.data.message, { theme: \"colored\" })\r\n           console.log(\"response is send email\", response)\r\n       })\r\n       .catch(errors => {\r\n           console.log(\"error is \", errors)\r\n           dispatch({\r\n               type: CLIENT_VERIFY_REQUEST_ERROR,\r\n               payload: errors\r\n           })\r\n           toast.error(errors.response.data.message, { theme: \"colored\" })\r\n       })\r\n}\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}