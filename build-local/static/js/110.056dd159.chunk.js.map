{"version":3,"sources":["views/pages/auth/ForgotPassword.js","views/components/Loader/LoaderSpinner.js","views/components/Button/Button.js","views/components/InputText/InputText.js","views/components/SectionTitle/SectionTitle.js"],"names":["ForgotPassword","props","dispatch","useDispatch","ForgotPasswordApiRes","useSelector","state","console","log","useState","submitClick","setSubmitClick","email_id","formValue","setFormValue","undefined","auth","forgot_password","status","history","push","pathname","email","type","className","lg","src","alt","title","subHeading","onSubmit","e","preventDefault","ForgotPasswordAction","name","test","placeholder","hasLabel","onChange","target","value","preValue","pattern","error","required","btnName","isDisabled","loading","isLoading","LoaderSpinner","React","Button","onClick","id","disabled","LinkButton","text","to","InputText","focused","setFocused","FormGroupClass","labelText","isPassword","defaultValue","onFocus","CPassword","onBlur","hidden","isHidden","autoComplete","min","max","maxLength","toString","readOnly","ChangeClass","viewBox","width","height","fill","d","SelectBox","optionData","TextArea","rows","defaultData","FileUpload","accept","fileName","RadioSelectGroup","FormLabelClass","defaultChecked","priceText","monthText","SectionTitle"],"mappings":"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","file":"static/js/110.056dd159.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col, Form } from \"react-bootstrap\"\r\nimport { SectionTitle } from '../../components/SectionTitle/SectionTitle';\r\nimport { Button } from '../../components/Button/Button';\r\nimport { InputText } from \"./../../components/InputText/InputText\"\r\nimport { ForgotPasswordAction } from '../../../redux/actions/authAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport \"./Auth.scss\"\r\n\r\nfunction ForgotPassword(props) {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst ForgotPasswordApiRes = useSelector(state => state)\r\n\r\n\tconsole.log(\"ForgotPasswordApiRes\", ForgotPasswordApiRes);\r\n\r\n\tconst [submitClick, setSubmitClick] = useState(false)\r\n\tconst [formValue, setFormValue] = useState({\r\n\t\temail_id: ''\r\n\t})\r\n\r\n\r\n\tconst onChange = (e) => {\r\n\t\tconst { name, value } = e.target\r\n\r\n\t\tsetFormValue((preValue) => {\r\n\t\t\treturn {\r\n\t\t\t\t...preValue,\r\n\t\t\t\t[name]: value\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst FormSubmit = (e) => {\r\n\t\tsetSubmitClick(true);\r\n\t\te.preventDefault()\r\n\t\tdispatch(ForgotPasswordAction(formValue))\r\n\t}\r\n\r\n\tif (submitClick == true) {\r\n\t\tif(ForgotPasswordApiRes.auth.forgot_password !== undefined && ForgotPasswordApiRes.auth.forgot_password.status == 200){\r\n\t\t\tprops.history.push({\r\n\t\t\t\tpathname: \"/otp\",\r\n\t\t\t\tstate: {email: formValue.email_id, type: 3}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"auth-section\">\r\n\t\t\t<div className='container-fluid'>\r\n\t\t\t\t<Row className=''>\r\n\t\t\t\t\t<Col lg=\"6\" className=''>\r\n\t\t\t\t\t\t<div className=\"auth-image text-center\">\r\n\t\t\t\t\t\t\t<img src=\"/images/forgot-password.svg\" alt=\"forgot-password\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg=\"6\" className=''>\r\n\t\t\t\t\t\t<div className=\"auth-wrapper\">\r\n\t\t\t\t\t\t\t<div className=\"auth-head\">\r\n\t\t\t\t\t\t\t\t<SectionTitle title=\"Forgot your password?\" subHeading={\"Not to worryâ€¦. We got you\"} className={''} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Form className=\"auth-form\" onSubmit={FormSubmit}>\r\n\t\t\t\t\t\t\t\t<InputText\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\tname=\"email_id\"\r\n\t\t\t\t\t\t\t\t\ttest=\"test\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email address\"\r\n\t\t\t\t\t\t\t\t\thasLabel={true}\r\n\t\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\t\tpattern=\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\"\r\n\t\t\t\t\t\t\t\t\terror=\"It should be a valid email address!\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div className=\"form-submit-btn-row mt-40\">\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tbtnName=\"Submit\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn-secondary\"\r\n\t\t\t\t\t\t\t\t\t\tisDisabled={ForgotPasswordApiRes.auth.loading}\r\n\t\t\t\t\t\t\t\t\t\tisLoading={ForgotPasswordApiRes.auth.loading}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\n\r\nexport default ForgotPassword;\r\n","import React from 'react';\r\nimport \"./Loader.scss\"\r\n\r\nconst LoaderSpinner = () => {\r\n     const [loader, setLoader] = React.useState(false)\r\n    return (\r\n        <>\r\n        &nbsp;<span className=\"spinner-border d-inline-block\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoaderSpinner\r\n// export const showLoader = (status) => {\r\n//     setLoader(status)\r\n// }\r\n\r\n// export const hideLoader = (status) => {\r\n//     setLoader(status)\r\n// }\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoaderSpinner from '../Loader/LoaderSpinner'\r\nimport './Button.scss';\r\n\r\nexport const Button = ({className, btnName, onClick, id, type, isDisabled, isLoading}) => {\r\n    return (\r\n        <button\r\n            className={`btn ${className}`}\r\n            onClick={onClick}\r\n            id={id}\r\n            type={type}\r\n            disabled={isDisabled}\r\n        >\r\n            {btnName}\r\n            {isLoading && <LoaderSpinner />}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport const LinkButton = ({className, text, id, to}) => {\r\n    return (\r\n        <Link\r\n            to={to}\r\n            className={`btn ${className}`}\r\n            id={id}\r\n        >\r\n            {text}\r\n        </Link>\r\n    );\r\n}","import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport './InputStyle.scss';\r\nexport const InputText = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {/* {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    } */}\r\n                </label>\r\n            }\r\n            <div className={props.isPassword && \"hasIcon\"}>\r\n                <input\r\n                    type={props.type}\r\n                    name={props.name}\r\n                    value={props.value}\r\n                    defaultValue={props.defaultValue}\r\n                    className={`form-control ${props.className}`}\r\n                    placeholder={props.placeholder}\r\n                    id={props.id}\r\n                    onChange={props.onChange}\r\n                    onFocus={() => props.CPassword == true && setFocused(true)}\r\n                    onBlur={handleChange}\r\n                    hidden={props.isHidden}\r\n                    disabled={props.isDisabled}\r\n                    required={props.required}\r\n                    autoComplete=\"off\"\r\n                    min={props.min}\r\n                    max={props.max}\r\n                    maxLength={props.maxLength}\r\n                    pattern={props.pattern}\r\n                    focused={focused.toString()}\r\n                    readOnly={props.readOnly}\r\n                />\r\n                {\r\n                    props.isPassword &&\r\n                    <span\r\n                        className={props.ChangeClass}\r\n                        onClick={props.onClick}\r\n                    >\r\n                    </span>\r\n                }\r\n                {props.error &&\r\n                    <div className=\"error-text\">\r\n                        <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                        <span> {props.error} </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport const SelectBox = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {/* {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    } */}\r\n                </label>\r\n            }\r\n            <select\r\n                name={props.name}\r\n                className={`form-control ${props.className}`}\r\n                id={props.id}\r\n                placeholder={props.placeholder}\r\n                onChange={props.onChange}\r\n                onBlur={handleChange}\r\n                required={props.required}\r\n                focused={focused.toString()}\r\n                disabled={props.disabled}\r\n            >\r\n                {\r\n                     props.optionData\r\n                }\r\n            </select>\r\n            {props.error &&\r\n                <div className=\"error-text\">\r\n                    <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                    <span> {props.error} </span>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport const TextArea = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {/* {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    } */}\r\n                </label>\r\n            }\r\n            <textarea\r\n                name={props.name}\r\n                id={props.id}\r\n                className={`form-control ${props.className}`}\r\n                placeholder={props.placeholder}\r\n                onBlur={handleChange}\r\n                required={props.required}\r\n                focused={focused.toString()}\r\n                pattern={props.pattern}\r\n                rows=\"5\"\r\n            >{props.defaultData}</textarea>\r\n            {props.error &&\r\n                <div className=\"error-text\">\r\n                    <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                    <span> {props.error} </span>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const FileUpload = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText && <label> {props.labelText} </label>}\r\n\r\n            <label className='fileUploader'>\r\n                <input\r\n                    type=\"file\"\r\n                    onChange={props.onChange}\r\n                    required={props.required}\r\n                    focused={focused.toString()}\r\n                    onBlur={handleChange}\r\n                    accept={props.accept}\r\n                    name={props.name}\r\n                />\r\n                <div className='fileUploader-inner'>\r\n                    <span className='browse'>Browse <img src=\"/images/file-upload.svg\" alt=\"icon\" /></span>\r\n                    <span className='fileName'>{props.fileName ? props.fileName : \"Not file selected yet!\"}</span>\r\n                </div>\r\n                {props.error &&\r\n                    <div className=\"error-text\">\r\n                        <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                        <span> {props.error} </span>\r\n                    </div>\r\n                }\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const RadioSelect = (props) => {\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    }\r\n                </label>\r\n            }\r\n            <input\r\n                type=\"radio\"\r\n                id={props.id}\r\n                name={props.name}\r\n                className={`radio-btn ${props.className}`}\r\n                value=\"\"\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const RadioSelectGroup = (props) => {\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label className={`radiobx-btn ${props.FormLabelClass}`}>\r\n                    <input\r\n                        type=\"radio\"\r\n                        id={props.id}\r\n                        name={props.name}\r\n                        className={`radio-btn ${props.className}`}\r\n                        value=\"\"\r\n                        defaultChecked={props.defaultChecked}\r\n                    />\r\n                    <span>\r\n                        <i></i>\r\n                        <div className={'plan-content'}>\r\n                            <div>\r\n                                <b>{props.labelText}</b>\r\n                                <font>{props.priceText}</font>\r\n                            </div>\r\n                            <p>{props.monthText}</p>\r\n                        </div>\r\n                    </span>\r\n                </label>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './SectionTitle.scss';\r\n\r\n\r\nexport const SectionTitle = ({ className, title, subHeading, id }) => {\r\n    return (\r\n        <div className={`section-title ${className}`} id={id}>\r\n            <h2>{title}</h2>\r\n            {subHeading &&\r\n                <p>{subHeading}</p>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}