{"version":3,"sources":["views/pages/auth/Login.js","views/components/Loader/LoaderSpinner.js","views/components/Button/Button.js","views/components/InputText/InputText.js","views/components/SectionTitle/SectionTitle.js"],"names":["Login","props","dispatch","useDispatch","token","useParams","console","log","LoginApiResponse","useSelector","state","auth","isLoading","loading","useState","submitClick","setSubmitClick","password","SetPassword","org_id","email_id","LoginField","setLoginField","onChange","e","target","name","value","preValue","undefined","login","data","status","history","push","pathname","email","type","isAuthenticated","className","lg","src","alt","title","onSubmit","preventDefault","LoginAction","autoComplete","placeholder","hasLabel","pattern","error","required","isPassword","onClick","ChangeClass","to","btnName","isDisabled","LoaderSpinner","React","Button","id","disabled","LinkButton","text","InputText","focused","setFocused","FormGroupClass","labelText","defaultValue","onFocus","CPassword","onBlur","hidden","isHidden","min","max","maxLength","toString","readOnly","viewBox","width","height","fill","d","SelectBox","optionData","TextArea","rows","defaultData","FileUpload","accept","fileName","RadioSelectGroup","FormLabelClass","defaultChecked","priceText","monthText","SectionTitle","subHeading"],"mappings":"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","file":"static/js/111.6225eca7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col,Form } from \"react-bootstrap\"\r\nimport { InputText } from \"./../../components/InputText/InputText\"\r\nimport { Link,useParams } from 'react-router-dom';\r\nimport { LoginAction } from '../../../redux/actions/authAction'\r\nimport { SectionTitle } from '../../components/SectionTitle/SectionTitle';\r\nimport { Button } from '../../components/Button/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport \"./Auth.scss\"\r\n\r\nfunction Login(props) {\r\n\tconst dispatch = useDispatch();\r\n    const {token} = useParams()\r\n\tconsole.log(\"token is \", token)\r\n\r\n\r\n\tconst LoginApiResponse = useSelector(state => state.auth)\r\n\tconst isLoading = useSelector(state => state.auth.loading)\r\n\r\n\tconsole.log(\"LoginApiResponse\", LoginApiResponse);\r\n\tconst [submitClick, setSubmitClick] = useState(false)\r\n\tconst [password, SetPassword] = useState(false);\r\n\tconst [LoginField, setLoginField] = useState({\r\n\t\torg_id: \"\",\r\n\t\temail_id: \"\",\r\n\t\tpassword: \"\"\r\n\t})\r\n\r\n\tconst ShowPassword = () => {\r\n\t\tSetPassword(!password)\r\n\t}\r\n\r\n\tconst onChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tsetLoginField((preValue) => {\r\n\t\t\treturn {\r\n\t\t\t\t...preValue,\r\n\t\t\t\t[name]: value\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tconst handSubmit = (e) => {\r\n\t\tsetSubmitClick(true)\r\n\t\te.preventDefault()\r\n\t\tdispatch(LoginAction(LoginField))\r\n\t}\r\n\r\n\tif(submitClick == true){\r\n\t\tif(LoginApiResponse.login.data !== undefined && LoginApiResponse.login.data.status == 200){\r\n\t\t\tprops.history.push({\r\n\t\t\t\tpathname: '/otp',\r\n\t\t\t\tstate: {email: LoginField.email_id, type: 2}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/* Authentication base redirection */\r\n\tif(LoginApiResponse !== undefined && LoginApiResponse.isAuthenticated == true){\r\n\t\tprops.history.push(\"/pidva/dashboard\")\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"auth-section\">\r\n\t\t\t<div className='container-fluid'>\r\n\t\t\t\t<Row className=''>\r\n\t\t\t\t\t<Col lg=\"6\" className=''>\r\n\t\t\t\t\t\t<div className=\"auth-image text-center\">\r\n\t\t\t\t\t\t\t<img src=\"/images/login-image.svg\" alt=\"Login\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg=\"6\" className=''>\r\n\t\t\t\t\t\t<div className=\"auth-wrapper\">\r\n\t\t\t\t\t\t\t<div className=\"auth-head\">\r\n\t\t\t\t\t\t\t\t<SectionTitle title=\"Login\" className={''} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Form onSubmit={handSubmit} autoComplete=\"off\">\r\n\t\t\t\t\t\t\t\t<div className=\"auth-form login-form\">\r\n\t\t\t\t\t\t\t\t\t<InputText\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"org_id\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Org ID\"\r\n\t\t\t\t\t\t\t\t\t\thasLabel={true}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\t\t\tpattern=\".{1,}\"\r\n\t\t\t\t\t\t\t\t\t\terror=\"ORG ID is Required!\"\r\n\t\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<InputText\r\n\t\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"email_id\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email address\"\r\n\t\t\t\t\t\t\t\t\t\thasLabel={true}\r\n\t\t\t\t\t\t\t\t\t\tpattern=\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\"\r\n\t\t\t\t\t\t\t\t\t\terror=\"It should be a valid email address!\"\r\n\t\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<InputText\r\n\t\t\t\t\t\t\t\t\t\ttype={password ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\tisPassword=\"true\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\t\t\tonClick={ShowPassword}\r\n\t\t\t\t\t\t\t\t\t\tChangeClass={password ? \"show-hide active\" : \"show-hide\"}\r\n\t\t\t\t\t\t\t\t\t\tpattern=\".{1,}\"\r\n\t\t\t\t\t\t\t\t\t\terror=\"Password is Required!\"\r\n\t\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='text-end text-link form-group'>\r\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/forgot-password\">Forgot Your Password?</Link>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-submit-btn-row\">\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tbtnName=\"Login\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn-secondary w-100\"\r\n\t\t\t\t\t\t\t\t\t\t\tisDisabled={isLoading}\r\n\t\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"bottom-info\">\r\n\t\t\t\t\t\t\t<p> New User? <Link to=\"/signup\" className=\"secondary-text\"> Sign Up </Link></p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport \"./Loader.scss\"\r\n\r\nconst LoaderSpinner = () => {\r\n     const [loader, setLoader] = React.useState(false)\r\n    return (\r\n        <>\r\n        &nbsp;<span className=\"spinner-border d-inline-block\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoaderSpinner\r\n// export const showLoader = (status) => {\r\n//     setLoader(status)\r\n// }\r\n\r\n// export const hideLoader = (status) => {\r\n//     setLoader(status)\r\n// }\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoaderSpinner from '../Loader/LoaderSpinner'\r\nimport './Button.scss';\r\n\r\nexport const Button = ({className, btnName, onClick, id, type, isDisabled, isLoading}) => {\r\n    return (\r\n        <button\r\n            className={`btn ${className}`}\r\n            onClick={onClick}\r\n            id={id}\r\n            type={type}\r\n            disabled={isDisabled}\r\n        >\r\n            {btnName}\r\n            {isLoading && <LoaderSpinner />}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport const LinkButton = ({className, text, id, to}) => {\r\n    return (\r\n        <Link\r\n            to={to}\r\n            className={`btn ${className}`}\r\n            id={id}\r\n        >\r\n            {text}\r\n        </Link>\r\n    );\r\n}","import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport './InputStyle.scss';\r\nexport const InputText = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {/* {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    } */}\r\n                </label>\r\n            }\r\n            <div className={props.isPassword && \"hasIcon\"}>\r\n                <input\r\n                    type={props.type}\r\n                    name={props.name}\r\n                    value={props.value}\r\n                    defaultValue={props.defaultValue}\r\n                    className={`form-control ${props.className}`}\r\n                    placeholder={props.placeholder}\r\n                    id={props.id}\r\n                    onChange={props.onChange}\r\n                    onFocus={() => props.CPassword == true && setFocused(true)}\r\n                    onBlur={handleChange}\r\n                    hidden={props.isHidden}\r\n                    disabled={props.isDisabled}\r\n                    required={props.required}\r\n                    autoComplete=\"off\"\r\n                    min={props.min}\r\n                    max={props.max}\r\n                    maxLength={props.maxLength}\r\n                    pattern={props.pattern}\r\n                    focused={focused.toString()}\r\n                    readOnly={props.readOnly}\r\n                />\r\n                {\r\n                    props.isPassword &&\r\n                    <span\r\n                        className={props.ChangeClass}\r\n                        onClick={props.onClick}\r\n                    >\r\n                    </span>\r\n                }\r\n                {props.error &&\r\n                    <div className=\"error-text\">\r\n                        <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                        <span> {props.error} </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport const SelectBox = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {/* {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    } */}\r\n                </label>\r\n            }\r\n            <select\r\n                name={props.name}\r\n                className={`form-control ${props.className}`}\r\n                id={props.id}\r\n                placeholder={props.placeholder}\r\n                onChange={props.onChange}\r\n                onBlur={handleChange}\r\n                required={props.required}\r\n                focused={focused.toString()}\r\n                disabled={props.disabled}\r\n            >\r\n                {\r\n                     props.optionData\r\n                }\r\n            </select>\r\n            {props.error &&\r\n                <div className=\"error-text\">\r\n                    <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                    <span> {props.error} </span>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport const TextArea = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {/* {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    } */}\r\n                </label>\r\n            }\r\n            <textarea\r\n                name={props.name}\r\n                id={props.id}\r\n                className={`form-control ${props.className}`}\r\n                placeholder={props.placeholder}\r\n                onBlur={handleChange}\r\n                required={props.required}\r\n                focused={focused.toString()}\r\n                pattern={props.pattern}\r\n                rows=\"5\"\r\n            >{props.defaultData}</textarea>\r\n            {props.error &&\r\n                <div className=\"error-text\">\r\n                    <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                    <span> {props.error} </span>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const FileUpload = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText && <label> {props.labelText} </label>}\r\n\r\n            <label className='fileUploader'>\r\n                <input\r\n                    type=\"file\"\r\n                    onChange={props.onChange}\r\n                    required={props.required}\r\n                    focused={focused.toString()}\r\n                    onBlur={handleChange}\r\n                    accept={props.accept}\r\n                    name={props.name}\r\n                />\r\n                <div className='fileUploader-inner'>\r\n                    <span className='browse'>Browse <img src=\"/images/file-upload.svg\" alt=\"icon\" /></span>\r\n                    <span className='fileName'>{props.fileName ? props.fileName : \"Not file selected yet!\"}</span>\r\n                </div>\r\n                {props.error &&\r\n                    <div className=\"error-text\">\r\n                        <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                        <span> {props.error} </span>\r\n                    </div>\r\n                }\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const RadioSelect = (props) => {\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    }\r\n                </label>\r\n            }\r\n            <input\r\n                type=\"radio\"\r\n                id={props.id}\r\n                name={props.name}\r\n                className={`radio-btn ${props.className}`}\r\n                value=\"\"\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const RadioSelectGroup = (props) => {\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label className={`radiobx-btn ${props.FormLabelClass}`}>\r\n                    <input\r\n                        type=\"radio\"\r\n                        id={props.id}\r\n                        name={props.name}\r\n                        className={`radio-btn ${props.className}`}\r\n                        value=\"\"\r\n                        defaultChecked={props.defaultChecked}\r\n                    />\r\n                    <span>\r\n                        <i></i>\r\n                        <div className={'plan-content'}>\r\n                            <div>\r\n                                <b>{props.labelText}</b>\r\n                                <font>{props.priceText}</font>\r\n                            </div>\r\n                            <p>{props.monthText}</p>\r\n                        </div>\r\n                    </span>\r\n                </label>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './SectionTitle.scss';\r\n\r\n\r\nexport const SectionTitle = ({ className, title, subHeading, id }) => {\r\n    return (\r\n        <div className={`section-title ${className}`} id={id}>\r\n            <h2>{title}</h2>\r\n            {subHeading &&\r\n                <p>{subHeading}</p>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}