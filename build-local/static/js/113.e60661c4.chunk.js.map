{"version":3,"sources":["views/pages/auth/ResetPassword.js","views/components/Loader/LoaderSpinner.js","views/components/Button/Button.js","views/components/InputText/InputText.js","views/components/SectionTitle/SectionTitle.js"],"names":["ResetPassword","props","dispatch","useDispatch","ForgotPasswordApiRes","useSelector","state","useState","submitClick","setSubmitClick","Password","SetPassword","ConfirmPassword","SetConfirmPassword","console","log","location","email_id","password","confirm_password","formValue","setFormValue","onChange","e","target","name","value","preValue","undefined","auth","reset_password","status","history","push","className","lg","src","alt","title","subHeading","onSubmit","preventDefault","ResetPasswordAction","type","placeholder","isPassword","onClick","ChangeClass","pattern","error","required","btnName","to","LoaderSpinner","React","Button","id","isDisabled","isLoading","disabled","LinkButton","text","InputText","focused","setFocused","FormGroupClass","labelText","defaultValue","onFocus","CPassword","onBlur","hidden","isHidden","autoComplete","min","max","maxLength","toString","readOnly","viewBox","width","height","fill","d","SelectBox","optionData","TextArea","rows","defaultData","FileUpload","accept","fileName","RadioSelectGroup","FormLabelClass","defaultChecked","priceText","monthText","SectionTitle"],"mappings":"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","file":"static/js/113.e60661c4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col, Form } from \"react-bootstrap\"\r\nimport { ResetPasswordAction } from '../../../redux/actions/authAction'\r\nimport { SectionTitle } from '../../components/SectionTitle/SectionTitle';\r\nimport { Button } from '../../components/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { InputText } from \"../../components/InputText/InputText\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport \"./Auth.scss\"\r\n\r\nfunction ResetPassword(props) {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst ForgotPasswordApiRes = useSelector(state => state)\r\n\r\n\tconst [submitClick, setSubmitClick] = useState(false)\r\n\tconst [Password, SetPassword] = useState(false);\r\n\tconst [ConfirmPassword, SetConfirmPassword] = useState(false);\r\n\r\n\tconsole.log(\"props.location.state\", props.location.state);\r\n\tconsole.log(\"ForgotPasswordApiRes\", ForgotPasswordApiRes);\r\n\r\n\tconst [formValue, setFormValue] = useState({\r\n\t\temail_id: props.location.state,\r\n\t\tpassword: '',\r\n\t\tconfirm_password: ''\r\n\t})\r\n\r\n\tconst ShowPassword = () => SetPassword(!Password);\r\n\tconst ShowConfirmPassword = () => SetConfirmPassword(!ConfirmPassword);\r\n\r\n\tconst onChange = (e) => {\r\n\t\tconst { name, value } = e.target\r\n\t\tsetFormValue((preValue) => {\r\n\t\t\treturn {\r\n\t\t\t\t...preValue,\r\n\t\t\t\t[name]: value\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst formSubmit = (e) => {\r\n\t\tsetSubmitClick(true)\r\n\t\te.preventDefault();\r\n\t\tdispatch(ResetPasswordAction(formValue))\r\n\t}\r\n\r\n\tif(submitClick == true) {\r\n\t\tif(ForgotPasswordApiRes.auth.reset_password !== undefined && ForgotPasswordApiRes.auth.reset_password.status == 200){\r\n\t\t\tprops.history.push(\"/login\")\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"auth-section\">\r\n\t\t\t<div className='container-fluid'>\r\n\t\t\t\t<Row className=''>\r\n\t\t\t\t\t<Col lg=\"6\" className=''>\r\n\t\t\t\t\t\t<div className=\"auth-image text-center\">\r\n\t\t\t\t\t\t\t<img src=\"/images/reset-password.svg\" alt=\"Reset-password\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg=\"6\" className=''>\r\n\t\t\t\t\t\t<div className=\"auth-wrapper\">\r\n\t\t\t\t\t\t\t<div className=\"auth-head\">\r\n\t\t\t\t\t\t\t\t<SectionTitle title=\"New Password\" subHeading={\"Not to worryâ€¦. We got you\"} className={''} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Form onSubmit={formSubmit} className=\"auth-form\">\r\n\t\t\t\t\t\t\t\t<InputText\r\n\t\t\t\t\t\t\t\t\ttype={Password ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"New Password\"\r\n\t\t\t\t\t\t\t\t\tisPassword=\"true\"\r\n\t\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\t\tonClick={ShowPassword}\r\n\t\t\t\t\t\t\t\t\tChangeClass={Password ? \"show-hide active\" : \"show-hide\"}\r\n\t\t\t\t\t\t\t\t\tpattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\"\r\n\t\t\t\t\t\t\t\t\terror=\"8+ characters 1 Uppercase character 1 Special Character 1 Number\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<p className='f-14'>8+ characters 1 Uppercase character 1 Special Character 1 Number</p>\r\n\t\t\t\t\t\t\t\t<InputText\r\n\t\t\t\t\t\t\t\t\ttype={ConfirmPassword ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\t\tname=\"confirm_password\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\tisPassword=\"true\"\r\n\t\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\t\tonClick={ShowConfirmPassword}\r\n\t\t\t\t\t\t\t\t\tChangeClass={ConfirmPassword ? \"show-hide active\" : \"show-hide\"}\r\n\t\t\t\t\t\t\t\t\tpattern={formValue.password}\r\n\t\t\t\t\t\t\t\t\terror=\"Passwords don't match!\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div className=\"form-submit-btn-row mt-40\">\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tbtnName=\"Reset Password\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn-secondary\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"bottom-info\">\r\n\t\t\t\t\t\t\t<p> New User? <Link to=\"/signup\" className=\"secondary-text\"> Sign Up </Link></p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\n\r\nexport default ResetPassword;\r\n","import React from 'react';\r\nimport \"./Loader.scss\"\r\n\r\nconst LoaderSpinner = () => {\r\n     const [loader, setLoader] = React.useState(false)\r\n    return (\r\n        <>\r\n        &nbsp;<span className=\"spinner-border d-inline-block\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoaderSpinner\r\n// export const showLoader = (status) => {\r\n//     setLoader(status)\r\n// }\r\n\r\n// export const hideLoader = (status) => {\r\n//     setLoader(status)\r\n// }\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoaderSpinner from '../Loader/LoaderSpinner'\r\nimport './Button.scss';\r\n\r\nexport const Button = ({className, btnName, onClick, id, type, isDisabled, isLoading}) => {\r\n    return (\r\n        <button\r\n            className={`btn ${className}`}\r\n            onClick={onClick}\r\n            id={id}\r\n            type={type}\r\n            disabled={isDisabled}\r\n        >\r\n            {btnName}\r\n            {isLoading && <LoaderSpinner />}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport const LinkButton = ({className, text, id, to}) => {\r\n    return (\r\n        <Link\r\n            to={to}\r\n            className={`btn ${className}`}\r\n            id={id}\r\n        >\r\n            {text}\r\n        </Link>\r\n    );\r\n}","import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport './InputStyle.scss';\r\nexport const InputText = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {/* {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    } */}\r\n                </label>\r\n            }\r\n            <div className={props.isPassword && \"hasIcon\"}>\r\n                <input\r\n                    type={props.type}\r\n                    name={props.name}\r\n                    value={props.value}\r\n                    defaultValue={props.defaultValue}\r\n                    className={`form-control ${props.className}`}\r\n                    placeholder={props.placeholder}\r\n                    id={props.id}\r\n                    onChange={props.onChange}\r\n                    onFocus={() => props.CPassword == true && setFocused(true)}\r\n                    onBlur={handleChange}\r\n                    hidden={props.isHidden}\r\n                    disabled={props.isDisabled}\r\n                    required={props.required}\r\n                    autoComplete=\"off\"\r\n                    min={props.min}\r\n                    max={props.max}\r\n                    maxLength={props.maxLength}\r\n                    pattern={props.pattern}\r\n                    focused={focused.toString()}\r\n                    readOnly={props.readOnly}\r\n                />\r\n                {\r\n                    props.isPassword &&\r\n                    <span\r\n                        className={props.ChangeClass}\r\n                        onClick={props.onClick}\r\n                    >\r\n                    </span>\r\n                }\r\n                {props.error &&\r\n                    <div className=\"error-text\">\r\n                        <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                        <span> {props.error} </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport const SelectBox = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {/* {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    } */}\r\n                </label>\r\n            }\r\n            <select\r\n                name={props.name}\r\n                className={`form-control ${props.className}`}\r\n                id={props.id}\r\n                placeholder={props.placeholder}\r\n                onChange={props.onChange}\r\n                onBlur={handleChange}\r\n                required={props.required}\r\n                focused={focused.toString()}\r\n                disabled={props.disabled}\r\n            >\r\n                {\r\n                     props.optionData\r\n                }\r\n            </select>\r\n            {props.error &&\r\n                <div className=\"error-text\">\r\n                    <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                    <span> {props.error} </span>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport const TextArea = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {/* {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    } */}\r\n                </label>\r\n            }\r\n            <textarea\r\n                name={props.name}\r\n                id={props.id}\r\n                className={`form-control ${props.className}`}\r\n                placeholder={props.placeholder}\r\n                onBlur={handleChange}\r\n                required={props.required}\r\n                focused={focused.toString()}\r\n                pattern={props.pattern}\r\n                rows=\"5\"\r\n            >{props.defaultData}</textarea>\r\n            {props.error &&\r\n                <div className=\"error-text\">\r\n                    <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                    <span> {props.error} </span>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const FileUpload = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText && <label> {props.labelText} </label>}\r\n\r\n            <label className='fileUploader'>\r\n                <input\r\n                    type=\"file\"\r\n                    onChange={props.onChange}\r\n                    required={props.required}\r\n                    focused={focused.toString()}\r\n                    onBlur={handleChange}\r\n                    accept={props.accept}\r\n                    name={props.name}\r\n                />\r\n                <div className='fileUploader-inner'>\r\n                    <span className='browse'>Browse <img src=\"/images/file-upload.svg\" alt=\"icon\" /></span>\r\n                    <span className='fileName'>{props.fileName ? props.fileName : \"Not file selected yet!\"}</span>\r\n                </div>\r\n                {props.error &&\r\n                    <div className=\"error-text\">\r\n                        <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                        <span> {props.error} </span>\r\n                    </div>\r\n                }\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const RadioSelect = (props) => {\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    }\r\n                </label>\r\n            }\r\n            <input\r\n                type=\"radio\"\r\n                id={props.id}\r\n                name={props.name}\r\n                className={`radio-btn ${props.className}`}\r\n                value=\"\"\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const RadioSelectGroup = (props) => {\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label className={`radiobx-btn ${props.FormLabelClass}`}>\r\n                    <input\r\n                        type=\"radio\"\r\n                        id={props.id}\r\n                        name={props.name}\r\n                        className={`radio-btn ${props.className}`}\r\n                        value=\"\"\r\n                        defaultChecked={props.defaultChecked}\r\n                    />\r\n                    <span>\r\n                        <i></i>\r\n                        <div className={'plan-content'}>\r\n                            <div>\r\n                                <b>{props.labelText}</b>\r\n                                <font>{props.priceText}</font>\r\n                            </div>\r\n                            <p>{props.monthText}</p>\r\n                        </div>\r\n                    </span>\r\n                </label>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './SectionTitle.scss';\r\n\r\n\r\nexport const SectionTitle = ({ className, title, subHeading, id }) => {\r\n    return (\r\n        <div className={`section-title ${className}`} id={id}>\r\n            <h2>{title}</h2>\r\n            {subHeading &&\r\n                <p>{subHeading}</p>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}