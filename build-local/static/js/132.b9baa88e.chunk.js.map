{"version":3,"sources":["views/pages/SuperAdminDashboard/ReportsManagement/DataEntryFromCreator.js","views/components/InputText/InputText.js"],"names":["window","jQuery","$","require","DataEntryFromCreator","fb","useRef","formData","useEffect","current","formBuilder","className","type","name","placeholder","pattern","error","required","labelText","optionData","value","hidden","id","ref","InputText","props","useState","focused","setFocused","FormGroupClass","isPassword","defaultValue","onChange","onFocus","CPassword","onBlur","e","isHidden","disabled","isDisabled","autoComplete","min","max","maxLength","toString","readOnly","ChangeClass","onClick","viewBox","width","height","fill","d","SelectBox","TextArea","rows","defaultData","FileUpload","accept","src","alt","fileName","RadioSelectGroup","FormLabelClass","defaultChecked","priceText","monthText"],"mappings":"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","file":"static/js/132.b9baa88e.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { InputText, SelectBox } from '../../../components/InputText/InputText';\r\nimport $ from \"jquery\";\r\nimport { useEffect } from 'react';\r\nimport './FormBuilder.scss'\r\n// import '../../../components/Button/Button.scss'\r\n\r\nwindow.jQuery = $;\r\nwindow.$ = $;\r\n\r\nrequire(\"jquery-ui-sortable\");\r\nrequire(\"formBuilder\");\r\n\r\n\r\nconst DataEntryFromCreator = () => {\r\n\tconst fb = useRef();\r\n\tconst formData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\t$(fb.current).formBuilder({ formData });\r\n\t}, [])\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section className='dashboard-section pidvaDashboard'>\r\n\t\t\t\t<h1 className='dashboard-title'>Verified Data Entry From creator</h1>\r\n\t\t\t\t<div className='repeat-white-bx'>\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t<div className='col-lg-6'>\r\n\t\t\t\t\t\t\t\t<InputText\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"form_name\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter Form Name\"\r\n\t\t\t\t\t\t\t\t\tpattern=\".{1,}\"\r\n\t\t\t\t\t\t\t\t\terror=\"Form Name Required!\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tlabelText=\"Form Name\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='col-lg-6'>\r\n\t\t\t\t\t\t\t\t<SelectBox\r\n\t\t\t\t\t\t\t\t\tname=\"services_ind\"\r\n\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t\t\t\t\tlabelText=\"Sub Service\"\r\n\t\t\t\t\t\t\t\t\terror=\"Please Select Sub Service!\"\r\n\t\t\t\t\t\t\t\t\toptionData={\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\" hidden>Select Industry</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Degree Education</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Employment</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Kenya Criminal History</option>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id=\"fb-editor\" ref={fb} />\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</section>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default DataEntryFromCreator\r\n","import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport './InputStyle.scss';\r\nexport const InputText = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {/* {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    } */}\r\n                </label>\r\n            }\r\n            <div className={props.isPassword && \"hasIcon\"}>\r\n                <input\r\n                    type={props.type}\r\n                    name={props.name}\r\n                    value={props.value}\r\n                    defaultValue={props.defaultValue}\r\n                    className={`form-control ${props.className}`}\r\n                    placeholder={props.placeholder}\r\n                    id={props.id}\r\n                    onChange={props.onChange}\r\n                    onFocus={() => props.CPassword == true && setFocused(true)}\r\n                    onBlur={handleChange}\r\n                    hidden={props.isHidden}\r\n                    disabled={props.isDisabled}\r\n                    required={props.required}\r\n                    autoComplete=\"off\"\r\n                    min={props.min}\r\n                    max={props.max}\r\n                    maxLength={props.maxLength}\r\n                    pattern={props.pattern}\r\n                    focused={focused.toString()}\r\n                    readOnly={props.readOnly}\r\n                />\r\n                {\r\n                    props.isPassword &&\r\n                    <span\r\n                        className={props.ChangeClass}\r\n                        onClick={props.onClick}\r\n                    >\r\n                    </span>\r\n                }\r\n                {props.error &&\r\n                    <div className=\"error-text\">\r\n                        <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                        <span> {props.error} </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport const SelectBox = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {/* {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    } */}\r\n                </label>\r\n            }\r\n            <select\r\n                name={props.name}\r\n                className={`form-control ${props.className}`}\r\n                id={props.id}\r\n                placeholder={props.placeholder}\r\n                onChange={props.onChange}\r\n                onBlur={handleChange}\r\n                required={props.required}\r\n                focused={focused.toString()}\r\n                disabled={props.disabled}\r\n            >\r\n                {\r\n                     props.optionData\r\n                }\r\n            </select>\r\n            {props.error &&\r\n                <div className=\"error-text\">\r\n                    <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                    <span> {props.error} </span>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport const TextArea = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {/* {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    } */}\r\n                </label>\r\n            }\r\n            <textarea\r\n                name={props.name}\r\n                id={props.id}\r\n                className={`form-control ${props.className}`}\r\n                placeholder={props.placeholder}\r\n                onBlur={handleChange}\r\n                required={props.required}\r\n                focused={focused.toString()}\r\n                pattern={props.pattern}\r\n                rows=\"5\"\r\n            >{props.defaultData}</textarea>\r\n            {props.error &&\r\n                <div className=\"error-text\">\r\n                    <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                    <span> {props.error} </span>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const FileUpload = (props) => {\r\n    const [focused, setFocused] = useState(false)\r\n    const handleChange = (e) => {\r\n        setFocused(true)\r\n    }\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText && <label> {props.labelText} </label>}\r\n\r\n            <label className='fileUploader'>\r\n                <input\r\n                    type=\"file\"\r\n                    onChange={props.onChange}\r\n                    required={props.required}\r\n                    focused={focused.toString()}\r\n                    onBlur={handleChange}\r\n                    accept={props.accept}\r\n                    name={props.name}\r\n                />\r\n                <div className='fileUploader-inner'>\r\n                    <span className='browse'>Browse <img src=\"/images/file-upload.svg\" alt=\"icon\" /></span>\r\n                    <span className='fileName'>{props.fileName ? props.fileName : \"Not file selected yet!\"}</span>\r\n                </div>\r\n                {props.error &&\r\n                    <div className=\"error-text\">\r\n                        <svg viewBox=\"0 0 24 24\" width=\"14\" height=\"14\" fill=\"#e74c3c\"><path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"></path></svg>\r\n                        <span> {props.error} </span>\r\n                    </div>\r\n                }\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const RadioSelect = (props) => {\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label>\r\n                    {props.labelText}\r\n                    {\r\n                        props.required &&\r\n                        <span className=\"text-danger\"> *</span>\r\n                    }\r\n                </label>\r\n            }\r\n            <input\r\n                type=\"radio\"\r\n                id={props.id}\r\n                name={props.name}\r\n                className={`radio-btn ${props.className}`}\r\n                value=\"\"\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const RadioSelectGroup = (props) => {\r\n    return (\r\n        <div className={`form-group ${props.FormGroupClass}`}>\r\n            {props.labelText &&\r\n                <label className={`radiobx-btn ${props.FormLabelClass}`}>\r\n                    <input\r\n                        type=\"radio\"\r\n                        id={props.id}\r\n                        name={props.name}\r\n                        className={`radio-btn ${props.className}`}\r\n                        value=\"\"\r\n                        defaultChecked={props.defaultChecked}\r\n                    />\r\n                    <span>\r\n                        <i></i>\r\n                        <div className={'plan-content'}>\r\n                            <div>\r\n                                <b>{props.labelText}</b>\r\n                                <font>{props.priceText}</font>\r\n                            </div>\r\n                            <p>{props.monthText}</p>\r\n                        </div>\r\n                    </span>\r\n                </label>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}"],"sourceRoot":""}