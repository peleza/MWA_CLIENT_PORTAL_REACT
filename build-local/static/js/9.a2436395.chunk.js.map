{"version":3,"sources":["../node_modules/@restart/ui/esm/DropdownContext.js","../node_modules/dequal/dist/index.mjs","../node_modules/@restart/hooks/esm/useSafeState.js","../node_modules/@restart/ui/esm/popper.js","../node_modules/@restart/ui/esm/usePopper.js","../node_modules/@restart/ui/esm/useClickOutside.js","../node_modules/@restart/ui/esm/mergeOptionsWithPopperConfig.js","../node_modules/@restart/ui/esm/DropdownMenu.js","../node_modules/@restart/ui/esm/DropdownToggle.js","../node_modules/@restart/ui/esm/DropdownItem.js","../node_modules/@restart/ui/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownContext.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/Dropdown.js"],"names":["DropdownContext","React","has","Object","prototype","hasOwnProperty","find","iter","tar","key","keys","dequal","foo","bar","ctor","len","tmp","constructor","Date","getTime","RegExp","toString","Array","length","Set","size","Map","get","ArrayBuffer","Uint8Array","DataView","byteLength","getInt8","isView","call","useSafeState","state","isMounted","useMounted","useCallback","nextState","createPopper","popperGenerator","defaultModifiers","hide","popperOffsets","computeStyles","eventListeners","offset","flip","preventOverflow","arrow","_excluded","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","indexOf","disabledApplyStylesModifier","name","enabled","phase","fn","ariaDescribedByModifier","effect","elements","reference","popper","ids","getAttribute","split","filter","id","trim","setAttribute","join","removeAttribute","_popper$getAttribute","role","toLowerCase","EMPTY_MODIFIERS","usePopper","referenceElement","popperElement","_ref","placement","strategy","modifiers","config","prevModifiers","useRef","popperInstanceRef","update","_popperInstanceRef$cu","current","forceUpdate","_popperInstanceRef$cu2","useState","attributes","styles","popperState","setState","updateModifier","useMemo","requires","forEach","element","nextModifiers","useEffect","setOptions","assign","destroy","undefined","s","noop","isLeftClickEvent","event","button","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","getRefTarget","ref","InitialTriggerEvents","click","mouseup","pointerup","useClickOutside","onClickOutside","disabled","clickTrigger","preventMouseClickOutsideRef","waitingForTrigger","handleMouseCapture","e","currentTarget","warning","contains","handleInitialMouse","useEventCallback","handleMouse","doc","ownerDocument","currentEvent","defaultView","window","removeInitialTriggerListener","listen","removeMouseCaptureListener","removeMouseListener","mobileSafariHackListeners","documentElement","slice","body","children","map","el","remove","toModifierArray","isArray","k","mergeOptionsWithPopperConfig","_modifiers$preventOve","_modifiers$preventOve2","_modifiers$offset","_modifiers$arrow","enableEvents","fixed","containerPadding","arrowElement","popperConfig","result","m","toModifierMap","options","padding","useDropdownMenu","context","useContext","useCallbackRef","attachArrowRef","hasShownRef","rootCloseEvent","placementOverride","enableEventListeners","shouldUsePopper","show","handleClose","toggle","setMenu","menuElement","toggleElement","menuProps","style","metadata","hasShown","arrowProps","DropdownMenu","props","meta","_jsx","_Fragment","displayName","defaultProps","isRoleMenu","_el$getAttribute","useDropdownToggle","useSSRSafeId","setToggle","handleClick","onClick","DropdownToggle","useDropdownItem","href","active","onSelectCtx","SelectableContext","activeKey","NavContext","eventKey","makeEventKey","isActive","isPropagationStopped","dataAttr","DropdownItem","as","Component","Button","dropdownItemProps","useRefWithUpdate","useForceUpdate","attachRef","Dropdown","defaultShow","rawShow","onSelect","rawOnToggle","onToggle","itemSelector","focusFirstItemOnShow","useWindow","useUncontrolledProp","menuRef","toggleRef","lastShow","usePrevious","lastSourceEvent","focusInDropdown","nextShow","type","originalEvent","handleSelect","activeElement","focusToggle","focus","maybeFocusFirst","focusType","test","first","qsa","getNextFocusedChild","items","index","Math","max","min","useEventListener","document","_menuRef$current","_toggleRef$current","fromMenu","fromToggle","tagName","next","preventDefault","addEventListener","_menuRef$current2","once","stopPropagation","Provider","value","Menu","Toggle","Item","bsPrefix","className","Anchor","prefix","useBootstrapPrefix","classNames","useWrappedRefWithWarning","componentName","getDropdownMenuPlacement","alignEnd","dropDirection","isRTL","align","showProps","renderOnMount","variant","isNavbar","NavbarContext","contextAlign","drop","isInputGroup","InputGroupContext","alignClasses","brkPoint","direction","push","useMergedRefs","useIsomorphicEffect","close","useButtonProps","buttonProps","childBsPrefix","dropdownContext","toggleProps","DropdownHeader","createWithBsPrefix","DropdownDivider","DropdownItemText","pProps","useUncontrolled","autoClose","navbar","useIsRTL","handleToggle","contextValue","BaseDropdown","ItemText","Divider","Header"],"mappings":"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","file":"static/js/9.a2436395.chunk.js","sourcesContent":["import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n","import { useCallback } from 'react';\nimport useMounted from './useMounted';\n\nfunction useSafeState(state) {\n  var isMounted = useMounted();\n  return [state[0], useCallback(function (nextState) {\n    if (!isMounted()) return;\n    return state[1](nextState);\n  }, [isMounted, state[1]])];\n}\n\nexport default useSafeState;","import arrow from '@popperjs/core/lib/modifiers/arrow';\nimport computeStyles from '@popperjs/core/lib/modifiers/computeStyles';\nimport eventListeners from '@popperjs/core/lib/modifiers/eventListeners';\nimport flip from '@popperjs/core/lib/modifiers/flip';\nimport hide from '@popperjs/core/lib/modifiers/hide';\nimport offset from '@popperjs/core/lib/modifiers/offset';\nimport popperOffsets from '@popperjs/core/lib/modifiers/popperOffsets';\nimport preventOverflow from '@popperjs/core/lib/modifiers/preventOverflow';\nimport { placements } from '@popperjs/core/lib/enums';\nimport { popperGenerator } from '@popperjs/core/lib/popper-base'; // For the common JS build we will turn this file into a bundle with no imports.\n// This is b/c the Popper lib is all esm files, and would break in a common js only environment\n\nexport const createPopper = popperGenerator({\n  defaultModifiers: [hide, popperOffsets, computeStyles, eventListeners, offset, flip, preventOverflow, arrow]\n});\nexport { placements };","const _excluded = [\"enabled\", \"placement\", \"strategy\", \"modifiers\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { dequal } from 'dequal';\nimport useSafeState from '@restart/hooks/useSafeState';\nimport { createPopper } from './popper';\nconst disabledApplyStylesModifier = {\n  name: 'applyStyles',\n  enabled: false,\n  phase: 'afterWrite',\n  fn: () => undefined\n}; // until docjs supports type exports...\n\nconst ariaDescribedByModifier = {\n  name: 'ariaDescribedBy',\n  enabled: true,\n  phase: 'afterWrite',\n  effect: ({\n    state\n  }) => () => {\n    const {\n      reference,\n      popper\n    } = state.elements;\n\n    if ('removeAttribute' in reference) {\n      const ids = (reference.getAttribute('aria-describedby') || '').split(',').filter(id => id.trim() !== popper.id);\n      if (!ids.length) reference.removeAttribute('aria-describedby');else reference.setAttribute('aria-describedby', ids.join(','));\n    }\n  },\n  fn: ({\n    state\n  }) => {\n    var _popper$getAttribute;\n\n    const {\n      popper,\n      reference\n    } = state.elements;\n    const role = (_popper$getAttribute = popper.getAttribute('role')) == null ? void 0 : _popper$getAttribute.toLowerCase();\n\n    if (popper.id && role === 'tooltip' && 'setAttribute' in reference) {\n      const ids = reference.getAttribute('aria-describedby');\n\n      if (ids && ids.split(',').indexOf(popper.id) !== -1) {\n        return;\n      }\n\n      reference.setAttribute('aria-describedby', ids ? `${ids},${popper.id}` : popper.id);\n    }\n  }\n};\nconst EMPTY_MODIFIERS = [];\n/**\n * Position an element relative some reference element using Popper.js\n *\n * @param referenceElement\n * @param popperElement\n * @param {object}      options\n * @param {object=}     options.modifiers Popper.js modifiers\n * @param {boolean=}    options.enabled toggle the popper functionality on/off\n * @param {string=}     options.placement The popper element placement relative to the reference element\n * @param {string=}     options.strategy the positioning strategy\n * @param {function=}   options.onCreate called when the popper is created\n * @param {function=}   options.onUpdate called when the popper is updated\n *\n * @returns {UsePopperState} The popper state\n */\n\nfunction usePopper(referenceElement, popperElement, _ref = {}) {\n  let {\n    enabled = true,\n    placement = 'bottom',\n    strategy = 'absolute',\n    modifiers = EMPTY_MODIFIERS\n  } = _ref,\n      config = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const prevModifiers = useRef(modifiers);\n  const popperInstanceRef = useRef();\n  const update = useCallback(() => {\n    var _popperInstanceRef$cu;\n\n    (_popperInstanceRef$cu = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu.update();\n  }, []);\n  const forceUpdate = useCallback(() => {\n    var _popperInstanceRef$cu2;\n\n    (_popperInstanceRef$cu2 = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu2.forceUpdate();\n  }, []);\n  const [popperState, setState] = useSafeState(useState({\n    placement,\n    update,\n    forceUpdate,\n    attributes: {},\n    styles: {\n      popper: {},\n      arrow: {}\n    }\n  }));\n  const updateModifier = useMemo(() => ({\n    name: 'updateStateModifier',\n    enabled: true,\n    phase: 'write',\n    requires: ['computeStyles'],\n    fn: ({\n      state\n    }) => {\n      const styles = {};\n      const attributes = {};\n      Object.keys(state.elements).forEach(element => {\n        styles[element] = state.styles[element];\n        attributes[element] = state.attributes[element];\n      });\n      setState({\n        state,\n        styles,\n        attributes,\n        update,\n        forceUpdate,\n        placement: state.placement\n      });\n    }\n  }), [update, forceUpdate, setState]);\n  const nextModifiers = useMemo(() => {\n    if (!dequal(prevModifiers.current, modifiers)) {\n      prevModifiers.current = modifiers;\n    }\n\n    return prevModifiers.current;\n  }, [modifiers]);\n  useEffect(() => {\n    if (!popperInstanceRef.current || !enabled) return;\n    popperInstanceRef.current.setOptions({\n      placement,\n      strategy,\n      modifiers: [...nextModifiers, updateModifier, disabledApplyStylesModifier]\n    });\n  }, [strategy, placement, updateModifier, enabled, nextModifiers]);\n  useEffect(() => {\n    if (!enabled || referenceElement == null || popperElement == null) {\n      return undefined;\n    }\n\n    popperInstanceRef.current = createPopper(referenceElement, popperElement, Object.assign({}, config, {\n      placement,\n      strategy,\n      modifiers: [...nextModifiers, ariaDescribedByModifier, updateModifier]\n    }));\n    return () => {\n      if (popperInstanceRef.current != null) {\n        popperInstanceRef.current.destroy();\n        popperInstanceRef.current = undefined;\n        setState(s => Object.assign({}, s, {\n          attributes: {},\n          styles: {\n            popper: {}\n          }\n        }));\n      }\n    }; // This is only run once to _create_ the popper\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [enabled, referenceElement, popperElement]);\n  return popperState;\n}\n\nexport default usePopper;","import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\n\nconst noop = () => {};\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport const getRefTarget = ref => ref && ('current' in ref ? ref.current : ref);\nconst InitialTriggerEvents = {\n  click: 'mousedown',\n  mouseup: 'mousedown',\n  pointerup: 'pointerdown'\n};\n/**\n * The `useClickOutside` hook registers your callback on the document that fires\n * when a pointer event is registered outside of the provided ref or element.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onClickOutside\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\n\nfunction useClickOutside(ref, onClickOutside = noop, {\n  disabled,\n  clickTrigger = 'click'\n} = {}) {\n  const preventMouseClickOutsideRef = useRef(false);\n  const waitingForTrigger = useRef(false);\n  const handleMouseCapture = useCallback(e => {\n    const currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'ClickOutside captured a close event but does not have a ref to compare it to. ' + 'useClickOutside(), should be passed a ref that resolves to a DOM node');\n    preventMouseClickOutsideRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target) || waitingForTrigger.current;\n    waitingForTrigger.current = false;\n  }, [ref]);\n  const handleInitialMouse = useEventCallback(e => {\n    const currentTarget = getRefTarget(ref);\n\n    if (currentTarget && contains(currentTarget, e.target)) {\n      waitingForTrigger.current = true;\n    }\n  });\n  const handleMouse = useEventCallback(e => {\n    if (!preventMouseClickOutsideRef.current) {\n      onClickOutside(e);\n    }\n  });\n  useEffect(() => {\n    if (disabled || ref == null) return undefined;\n    const doc = ownerDocument(getRefTarget(ref)); // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    let currentEvent = (doc.defaultView || window).event;\n    let removeInitialTriggerListener = null;\n\n    if (InitialTriggerEvents[clickTrigger]) {\n      removeInitialTriggerListener = listen(doc, InitialTriggerEvents[clickTrigger], handleInitialMouse, true);\n    } // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n\n\n    const removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    const removeMouseListener = listen(doc, clickTrigger, e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleMouse(e);\n    });\n    let mobileSafariHackListeners = [];\n\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(el => listen(el, 'mousemove', noop));\n    }\n\n    return () => {\n      removeInitialTriggerListener == null ? void 0 : removeInitialTriggerListener();\n      removeMouseCaptureListener();\n      removeMouseListener();\n      mobileSafariHackListeners.forEach(remove => remove());\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleInitialMouse, handleMouse]);\n}\n\nexport default useClickOutside;","export function toModifierMap(modifiers) {\n  const result = {};\n\n  if (!Array.isArray(modifiers)) {\n    return modifiers || result;\n  } // eslint-disable-next-line no-unused-expressions\n\n\n  modifiers == null ? void 0 : modifiers.forEach(m => {\n    result[m.name] = m;\n  });\n  return result;\n}\nexport function toModifierArray(map = {}) {\n  if (Array.isArray(map)) return map;\n  return Object.keys(map).map(k => {\n    map[k].name = k;\n    return map[k];\n  });\n}\nexport default function mergeOptionsWithPopperConfig({\n  enabled,\n  enableEvents,\n  placement,\n  flip,\n  offset,\n  fixed,\n  containerPadding,\n  arrowElement,\n  popperConfig = {}\n}) {\n  var _modifiers$preventOve, _modifiers$preventOve2, _modifiers$offset, _modifiers$arrow;\n\n  const modifiers = toModifierMap(popperConfig.modifiers);\n  return Object.assign({}, popperConfig, {\n    placement,\n    enabled,\n    strategy: fixed ? 'fixed' : popperConfig.strategy,\n    modifiers: toModifierArray(Object.assign({}, modifiers, {\n      eventListeners: {\n        enabled: enableEvents\n      },\n      preventOverflow: Object.assign({}, modifiers.preventOverflow, {\n        options: containerPadding ? Object.assign({\n          padding: containerPadding\n        }, (_modifiers$preventOve = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve.options) : (_modifiers$preventOve2 = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve2.options\n      }),\n      offset: {\n        options: Object.assign({\n          offset\n        }, (_modifiers$offset = modifiers.offset) == null ? void 0 : _modifiers$offset.options)\n      },\n      arrow: Object.assign({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: Object.assign({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: Object.assign({\n        enabled: !!flip\n      }, modifiers.flip)\n    }))\n  });\n}","const _excluded = [\"children\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useContext, useRef } from 'react';\nimport * as React from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useClickOutside from './useClickOutside';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst noop = () => {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options = {}) {\n  const context = useContext(DropdownContext);\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const hasShownRef = useRef(false);\n  const {\n    flip,\n    offset,\n    rootCloseEvent,\n    fixed = false,\n    placement: placementOverride,\n    popperConfig = {},\n    enableEventListeners = true,\n    usePopper: shouldUsePopper = !!context\n  } = options;\n  const show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  const handleClose = e => {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  const {\n    placement,\n    setMenu,\n    menuElement,\n    toggleElement\n  } = context || {};\n  const popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placementOverride || placement || 'bottom-start',\n    enabled: shouldUsePopper,\n    enableEvents: enableEventListeners == null ? show : enableEventListeners,\n    offset,\n    flip,\n    fixed,\n    arrowElement,\n    popperConfig\n  }));\n  const menuProps = Object.assign({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n  const metadata = {\n    show,\n    placement,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? Object.assign({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useClickOutside(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nconst defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref) {\n  let {\n    children\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [props, meta] = useDropdownMenu(options);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\n\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import { useContext, useCallback } from 'react';\nimport * as React from 'react';\nimport { useSSRSafeId } from './ssr';\nimport DropdownContext from './DropdownContext';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const isRoleMenu = el => {\n  var _el$getAttribute;\n\n  return ((_el$getAttribute = el.getAttribute('role')) == null ? void 0 : _el$getAttribute.toLowerCase()) === 'menu';\n};\n\nconst noop = () => {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  const id = useSSRSafeId();\n  const {\n    show = false,\n    toggle = noop,\n    setToggle,\n    menuElement\n  } = useContext(DropdownContext) || {};\n  const handleClick = useCallback(e => {\n    toggle(!show, e);\n  }, [show, toggle]);\n  const props = {\n    id,\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-expanded': !!show\n  }; // This is maybe better down in an effect, but\n  // the component is going to update anyway when the menu element\n  // is set so might return new props.\n\n  if (menuElement && isRoleMenu(menuElement)) {\n    props['aria-haspopup'] = true;\n  }\n\n  return [props, {\n    show,\n    toggle\n  }];\n}\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle({\n  children\n}) {\n  const [props, meta] = useDropdownToggle();\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\n\nDropdownToggle.displayName = 'DropdownToggle';\n/** @component */\n\nexport default DropdownToggle;","const _excluded = [\"eventKey\", \"disabled\", \"onClick\", \"active\", \"as\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NavContext from './NavContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Create a dropdown item. Returns a set of props for the dropdown item component\n * including an `onClick` handler that prevents selection when the item is disabled\n */\nexport function useDropdownItem({\n  key,\n  href,\n  active,\n  disabled,\n  onClick\n}) {\n  const onSelectCtx = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const {\n    activeKey\n  } = navContext || {};\n  const eventKey = makeEventKey(key, href);\n  const isActive = active == null && key != null ? makeEventKey(activeKey) === eventKey : active;\n  const handleClick = useEventCallback(event => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(event);\n\n    if (onSelectCtx && !event.isPropagationStopped()) {\n      onSelectCtx(eventKey, event);\n    }\n  });\n  return [{\n    onClick: handleClick,\n    'aria-disabled': disabled || undefined,\n    'aria-selected': isActive,\n    [dataAttr('dropdown-item')]: ''\n  }, {\n    isActive\n  }];\n}\nconst DropdownItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    eventKey,\n    disabled,\n    onClick,\n    active,\n    as: Component = Button\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [dropdownItemProps] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n    ref: ref\n  }, dropdownItemProps));\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport { useCallback, useRef, useEffect, useMemo, useContext } from 'react';\nimport * as React from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventListener from '@restart/hooks/useEventListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle, { isRoleMenu } from './DropdownToggle';\nimport DropdownItem from './DropdownItem';\nimport SelectableContext from './SelectableContext';\nimport { dataAttr } from './DataKey';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useRefWithUpdate() {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef(null);\n  const attachRef = useCallback(element => {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown({\n  defaultShow,\n  show: rawShow,\n  onSelect,\n  onToggle: rawOnToggle,\n  itemSelector = `* [${dataAttr('dropdown-item')}]`,\n  focusFirstItemOnShow,\n  placement = 'bottom-start',\n  children\n}) {\n  const window = useWindow();\n  const [show, onToggle] = useUncontrolledProp(rawShow, defaultShow, rawOnToggle); // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n  const [menuRef, setMenu] = useRefWithUpdate();\n  const menuElement = menuRef.current;\n  const [toggleRef, setToggle] = useRefWithUpdate();\n  const toggleElement = toggleRef.current;\n  const lastShow = usePrevious(show);\n  const lastSourceEvent = useRef(null);\n  const focusInDropdown = useRef(false);\n  const onSelectCtx = useContext(SelectableContext);\n  const toggle = useCallback((nextShow, event, source = event == null ? void 0 : event.type) => {\n    onToggle(nextShow, {\n      originalEvent: event,\n      source\n    });\n  }, [onToggle]);\n  const handleSelect = useEventCallback((key, event) => {\n    onSelect == null ? void 0 : onSelect(key, event);\n    toggle(false, event, 'select');\n\n    if (!event.isPropagationStopped()) {\n      onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    }\n  });\n  const context = useMemo(() => ({\n    toggle,\n    placement,\n    show,\n    menuElement,\n    toggleElement,\n    setMenu,\n    setToggle\n  }), [toggle, placement, show, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(menuElement.ownerDocument.activeElement);\n  }\n\n  const focusToggle = useEventCallback(() => {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  const maybeFocusFirst = useEventCallback(() => {\n    const type = lastSourceEvent.current;\n    let focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && isRoleMenu(menuRef.current) ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    const first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(() => {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(() => {\n    lastSourceEvent.current = null;\n  });\n\n  const getNextFocusedChild = (current, offset) => {\n    if (!menuRef.current) return null;\n    const items = qsa(menuRef.current, itemSelector);\n    let index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  useEventListener(useCallback(() => window.document, [window]), 'keydown', event => {\n    var _menuRef$current, _toggleRef$current;\n\n    const {\n      key\n    } = event;\n    const target = event.target;\n    const fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    const fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    const isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu || key === 'Escape' && target.type === 'search')) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    if (key === 'Tab' && (!menuRef.current || !show)) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n    const meta = {\n      originalEvent: event,\n      source: event.type\n    };\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          const next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, meta);\n        } else {\n          const next = getNextFocusedChild(target, 1);\n          if (next && next.focus) next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(target.ownerDocument, 'keyup', e => {\n          var _menuRef$current2;\n\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, meta);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        if (key === 'Escape') {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        onToggle(false, meta);\n        break;\n\n      default:\n    }\n  });\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(DropdownContext.Provider, {\n      value: context,\n      children: children\n    })\n  });\n}\n\nDropdown.displayName = 'Dropdown';\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nDropdown.Item = DropdownItem;\nexport default Dropdown;","import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext({});\nDropdownContext.displayName = 'DropdownContext';\nexport default DropdownContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useDropdownItem } from '@restart/ui/DropdownItem';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  eventKey,\n  disabled = false,\n  onClick,\n  active,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  const [dropdownItemProps, meta] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...dropdownItemProps,\n    ref: ref,\n    className: classNames(className, prefix, meta.isActive && 'active', disabled && 'disabled')\n  });\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  const warningRef = useCallback(refValue => {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `${componentName} injected a ref to a provided \\`as\\` component that resolved to a component instance instead of a DOM element. ` + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownMenu } from '@restart/ui/DropdownMenu';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport DropdownContext from './DropdownContext';\nimport InputGroupContext from './InputGroupContext';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  flip: true\n};\nexport function getDropdownMenuPlacement(alignEnd, dropDirection, isRTL) {\n  const topStart = isRTL ? 'top-end' : 'top-start';\n  const topEnd = isRTL ? 'top-start' : 'top-end';\n  const bottomStart = isRTL ? 'bottom-end' : 'bottom-start';\n  const bottomEnd = isRTL ? 'bottom-start' : 'bottom-end';\n  const leftStart = isRTL ? 'right-start' : 'left-start';\n  const leftEnd = isRTL ? 'right-end' : 'left-end';\n  const rightStart = isRTL ? 'left-start' : 'right-start';\n  const rightEnd = isRTL ? 'left-end' : 'right-end';\n  let placement = alignEnd ? bottomEnd : bottomStart;\n  if (dropDirection === 'up') placement = alignEnd ? topEnd : topStart;else if (dropDirection === 'end') placement = alignEnd ? rightEnd : rightStart;else if (dropDirection === 'start') placement = alignEnd ? leftEnd : leftStart;\n  return placement;\n}\nconst DropdownMenu = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  align,\n  rootCloseEvent,\n  flip,\n  show: showProps,\n  renderOnMount,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  popperConfig,\n  variant,\n  ...props\n}, ref) => {\n  let alignEnd = false;\n  const isNavbar = useContext(NavbarContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  const {\n    align: contextAlign,\n    drop,\n    isRTL\n  } = useContext(DropdownContext);\n  align = align || contextAlign;\n  const isInputGroup = useContext(InputGroupContext);\n  const alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      const keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        const brkPoint = keys[0];\n        const direction = align[brkPoint]; // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n\n        alignEnd = direction === 'start';\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\n      }\n    } else if (align === 'end') {\n      alignEnd = true;\n    }\n  }\n\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const [menuProps, {\n    hasShown,\n    popper,\n    show,\n    toggle\n  }] = useDropdownMenu({\n    flip,\n    rootCloseEvent,\n    show: showProps,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig,\n    placement\n  });\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\n  useIsomorphicEffect(() => {\n    // Popper's initial position for the menu is incorrect when\n    // renderOnMount=true. Need to call update() to correct it.\n    if (show) popper == null ? void 0 : popper.update();\n  }, [show]);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\n\n    menuProps.align = align;\n  }\n\n  let style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = { ...props.style,\n      ...menuProps.style\n    };\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...menuProps,\n    style: style // Bootstrap css requires this data attrib to style responsive menus.\n    ,\n    ...((alignClasses.length || isNavbar) && {\n      'data-bs-popper': 'static'\n    }),\n    className: classNames(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  const isInputGroup = useContext(InputGroupContext);\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, !!isInputGroup && (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nconst DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  Component: 'hr',\n  defaultProps: {\n    role: 'separator'\n  }\n});\nconst DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nconst defaultProps = {\n  navbar: false,\n  align: 'start',\n  autoClose: true\n};\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop,\n    show,\n    className,\n    align,\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    autoClose,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const isRTL = useIsRTL();\n\n  const isClosingPermitted = source => {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click'; // autoClose=inside doesn't permit close on rootClose\n\n    if (autoClose === 'inside') return source !== 'rootClose'; // autoClose=outside doesn't permit close on select\n\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n\n  const handleToggle = useEventCallback((nextShow, meta) => {\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null ? void 0 : onToggle(nextShow, meta);\n  });\n  const alignEnd = align === 'end';\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const contextValue = useMemo(() => ({\n    align,\n    drop,\n    isRTL\n  }), [align, drop, isRTL]);\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, { ...props,\n        ref: ref,\n        className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'end' && 'dropend', drop === 'start' && 'dropstart')\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});"],"sourceRoot":""}